<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API</name>
    </assembly>
    <members>
        <member name="T:API.Controllers.v1.Basic.GroupsController">
            <summary>
            Group Methods
            </summary>
        </member>
        <member name="T:API.Controllers.v1.Basic.MenusController">
            <summary>
            Fetch Menus or Systems for user 
            </summary>
        </member>
        <member name="M:API.Controllers.v1.Basic.MenusController.GetSystemMenus(System.Int32)">
            <summary>
            Get Systems And Menus for Signed User
            </summary>
            <param name="systemId"></param>
            <returns></returns>
        </member>
        <member name="T:API.Controllers.v1.Basic.UsersController">
            <summary>
            Users Actions
            </summary>
        </member>
        <member name="M:API.Controllers.v1.Basic.UsersController.#ctor(Data.Repositories.UserRepositories.IUserRepository,Services.Services.Services.IJwtService,Data.Repositories.IBaseRepository{Entities.Framework.LoginLog},Microsoft.Extensions.Caching.Memory.IMemoryCache,Data.Repositories.IBaseRepository{Entities.Framework.UserToken},Data.Repositories.IBaseRepository{Entities.Framework.Menu},Data.Repositories.IBaseRepository{Entities.Framework.ConfigData},Data.Repositories.IBaseRepository{Entities.Framework.UserGroup},Data.Repositories.IBaseRepository{Entities.Framework.FileAttachment},Data.Repositories.IBaseRepository{Entities.Framework.UserMessage},Services.Services.IUserConnectionService,Data.Repositories.IBaseRepository{Entities.Framework.UserConnection},Data.Repositories.IBaseRepository{Entities.Framework.AxCharts.AxChart},Data.Repositories.IBaseRepository{Entities.Framework.AxCharts.BarChart},Data.Repositories.IBaseRepository{Entities.Framework.AxCharts.NumericWidget},Microsoft.AspNetCore.SignalR.IHubContext{API.Hubs.AxHub},Data.Repositories.IBaseRepository{Entities.Framework.AxGroup},Data.Repositories.IBaseRepository{Entities.MasterSignal.AxSignal},Data.Repositories.IBaseRepository{Entities.MasterSignal.AnalysisMsg})">
            <inheritdoc />
        </member>
        <member name="M:API.Controllers.v1.Basic.UsersController.AxToken(API.Models.LoginDto,System.Threading.CancellationToken)">
            <summary>
            This method is Login 
            </summary>
            <param name="loginDto"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.v1.Basic.UsersController.SignOut(System.Threading.CancellationToken)">
            <summary>
            SignOut user and Remove user Token from Db
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.UnauthorizedAccessException"></exception>
        </member>
        <member name="M:API.Controllers.v1.Basic.UsersController.GetInitData(System.Threading.CancellationToken)">
            <summary>
            Get Init Information For Main Panel
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
            <exception cref="T:System.UnauthorizedAccessException"></exception>
        </member>
        <member name="M:API.Controllers.v1.Basic.UsersController.GetUserPermissions(System.Threading.CancellationToken)">
            <summary>
            Get Signed User Permission keys
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.v1.Basic.UsersController.Get(Entities.Framework.Reports.DataRequest)">
            <summary>
            Get All Users
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.v1.Basic.UsersController.Get(System.Int32)">
            <summary>
            Get User Instance By Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
